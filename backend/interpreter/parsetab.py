
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARITHMETICOPERATORHIGH ASSIGN ASSIGNMENTOPERATOR ASSIGNMENTOPERATOR2 BREAK CASE COLON COMMA CONSOLE CONST CONTINUE DEFAULT DOT ELSE FALSE FLOAT FOR FUNCTION ID IF INDEXOF INTERFACE JOIN KEYS LBRACE LBRACKET LENGTH LOG LOGICALNEGATION LOGICALOPERATOR LPAREN MINUS NUMBER OBJECT OF PARSEFLOAT PARSEINT PLUS POP PUSH QUESTIONMARK RBRACE RBRACKET RELATIONALOPERATOR RETURN RPAREN SEMICOLON STRING SWITCH TOLOWERCASE TOSTRING TOUPPERCASE TRUE TYPE TYPEOF VALUES VAR WHILEinit            : instrsinstrs    : instrs instrinstrs    : instrs interface_instrinstrs    : instrinstrs    : interface_instrinstr    : statement SEMICOLON\n                | statement_pop SEMICOLON\n                | statement_push SEMICOLON\n                | if_instr\n                | switch_instr\n                | while_instr\n                | for_instr\n                | for_each_instr\n                | break_instr\n                | continue_instr\n                | console_instr\n                | function_instr\n                | return_instr\n                | function_call_instr SEMICOLON\n                \n    interface_instr : INTERFACE ID LBRACE interface_params RBRACEinterface_params : interface_params ID COLON function_type SEMICOLONinterface_params : ID COLON function_type SEMICOLONfunction_instr : FUNCTION ID LPAREN function_params RPAREN COLON function_type LBRACE instrs RBRACEfunction_instr : FUNCTION ID LPAREN function_params RPAREN LBRACE instrs RBRACEfunction_type : TYPE matriz_dimensions\n                | TYPE\n                | ID matriz_dimensions\n                | ID\n    function_params : function_params COMMA ID COLON function_typefunction_params : ID COLON function_typefunction_params : function_call_instr : ID LPAREN values RPARENfunction_call_instr : ID LPAREN RPARENreturn_instr : RETURN statement_assign_value SEMICOLONconsole_instr : CONSOLE DOT LOG LPAREN values RPAREN SEMICOLONstatement : var_type ID statement_assignstatement : var_type ID COLON statement_type statement_assignstatement : ID statement_assignstatement : var_type ID COLON statement_type matriz_dimensions ASSIGN matriz_dimensions_valuesstatement_type : TYPE\n                | ID\n    statement : ID matriz_dimensions_access ASSIGN statement_assign_valuestatement : interface_dimensions_access statement_assigninterface_dimensions_access : interface_dimensions_access DOT factorinterface_dimensions_access : factor DOT factorstatement_push : factor DOT PUSH LPAREN statement_assign_value RPARENstatement_pop : factor DOT POP LPAREN RPARENmatriz_dimensions : matriz_dimensions LBRACKET RBRACKETmatriz_dimensions : LBRACKET RBRACKETmatriz_dimensions_access : matriz_dimensions_access LBRACKET statement_assign_value RBRACKETmatriz_dimensions_access : LBRACKET statement_assign_value RBRACKETmatriz_dimensions_values : LBRACKET  elements RBRACKETmatriz_dimensions_values : LBRACKET RBRACKETelements : elements COMMA elementelements : elementelement : statement_assign_valueelement : matriz_dimensions_valuesvalues    : values COMMA statement_assign_valuevalues    : statement_assign_valuevar_type : VAR\n                | CONSTstatement_assign : ASSIGN statement_assign_value\n                | ASSIGNMENTOPERATOR statement_assign_value\n                | ASSIGNMENTOPERATOR2\n                | ASSIGN LBRACE statement_assign_interface  RBRACE\n                statement_assign_interface : statement_assign_interface COMMA ID COLON statement_assign_valuestatement_assign_interface : ID COLON statement_assign_valuestatement_assign_value : ternary_operator\n                | logical\n                | statement_pop\n                | statement_pushternary_operator : relation QUESTIONMARK relation COLON relationif_instr      : IF LPAREN logical RPAREN LBRACE instrs RBRACEif_instr      : IF LPAREN logical RPAREN LBRACE instrs RBRACE ELSE LBRACE instrs RBRACEif_instr      : IF LPAREN logical RPAREN LBRACE instrs RBRACE ELSE if_instrswitch_instr      : SWITCH LPAREN logical RPAREN LBRACE cases RBRACEcases    : cases casecases    : casecase    : CASE logical COLON instrscase    : DEFAULT COLON instrsbreak_instr    : BREAK SEMICOLONcontinue_instr    : CONTINUE SEMICOLONwhile_instr    : WHILE LPAREN logical RPAREN LBRACE instrs RBRACEfor_instr    : FOR LPAREN statement SEMICOLON logical SEMICOLON statement RPAREN LBRACE instrs RBRACEfor_each_instr    : FOR LPAREN var_type ID OF factor RPAREN LBRACE instrs RBRACElogical : logical LOGICALOPERATOR relationlogical : relationrelation : relation RELATIONALOPERATOR arithmeticrelation : arithmeticarithmetic : arithmetic arithmetic_operador_low termarithmetic : termterm : term ARITHMETICOPERATORHIGH factor_functionterm : factor_functionfactor_function : factor DOT INDEXOF LPAREN factor RPAREN\n                | factor DOT TOSTRING LPAREN RPAREN\n                | factor DOT JOIN LPAREN RPAREN\n                | factor DOT LENGTH\n                | factor DOT TOLOWERCASE LPAREN RPAREN\n                | factor DOT TOUPPERCASE LPAREN RPAREN\n                | OBJECT DOT KEYS LPAREN factor RPAREN\n                | OBJECT DOT VALUES LPAREN factor RPAREN\n    factor_function : PARSEINT LPAREN factor RPAREN\n                | PARSEFLOAT LPAREN factor RPAREN\n    factor_function : factorfactor_function : interface_dimensions_accessfactor : TYPEOF factorfactor : ID factor : FLOAT factor : STRINGfactor : NUMBER factor : ID matriz_dimensions_accessfactor : LPAREN logical RPAREN factor : MINUS LPAREN NUMBER RPARENfactor : MINUS LPAREN FLOAT RPARENfactor : LOGICALNEGATION factorfactor : TRUE\n                | FALSEfactor : function_call_instrarithmetic_operador_low : PLUS\n                | MINUS'
    
_lr_action_items = {'INTERFACE':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[19,19,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,19,19,19,19,19,-73,-76,19,-83,-35,19,19,19,19,19,-24,19,-75,19,19,19,19,19,19,-85,-23,-74,-84,]),'ID':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,19,21,24,32,33,34,35,36,41,44,45,46,47,48,49,53,54,55,57,60,61,74,75,76,77,78,79,92,93,94,96,103,109,110,111,112,113,114,115,117,118,124,128,129,130,131,135,141,147,165,167,168,174,176,179,180,187,192,193,196,198,200,202,204,205,209,223,226,228,229,233,234,238,241,243,248,249,252,253,256,258,259,260,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[20,20,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,50,58,72,81,72,-60,-61,72,72,-2,-3,-6,-7,-8,-19,72,72,72,72,72,72,72,72,72,125,-81,-82,134,72,72,139,143,72,72,72,-119,-120,72,72,72,72,166,169,-34,72,72,175,72,72,72,72,72,206,-20,210,72,72,72,72,20,20,72,206,235,72,206,20,72,20,125,206,20,-22,72,72,-73,-76,20,-83,-35,20,206,-21,20,20,20,20,-24,72,20,-75,20,20,20,20,20,20,-85,-23,-74,-84,]),'IF':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,267,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[25,25,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,25,25,25,25,25,-73,-76,25,-83,-35,25,25,25,25,25,25,-24,25,-75,25,25,25,25,25,25,-85,-23,-74,-84,]),'SWITCH':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[26,26,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,26,26,26,26,26,-73,-76,26,-83,-35,26,26,26,26,26,-24,26,-75,26,26,26,26,26,26,-85,-23,-74,-84,]),'WHILE':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[27,27,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,27,27,27,27,27,-73,-76,27,-83,-35,27,27,27,27,27,-24,27,-75,27,27,27,27,27,27,-85,-23,-74,-84,]),'FOR':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[28,28,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,28,28,28,28,28,-73,-76,28,-83,-35,28,28,28,28,28,-24,28,-75,28,28,28,28,28,28,-85,-23,-74,-84,]),'BREAK':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[29,29,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,29,29,29,29,29,-73,-76,29,-83,-35,29,29,29,29,29,-24,29,-75,29,29,29,29,29,29,-85,-23,-74,-84,]),'CONTINUE':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[30,30,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,30,30,30,30,30,-73,-76,30,-83,-35,30,30,30,30,30,-24,30,-75,30,30,30,30,30,30,-85,-23,-74,-84,]),'CONSOLE':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[31,31,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,31,31,31,31,31,-73,-76,31,-83,-35,31,31,31,31,31,-24,31,-75,31,31,31,31,31,31,-85,-23,-74,-84,]),'FUNCTION':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[32,32,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,32,32,32,32,32,-73,-76,32,-83,-35,32,32,32,32,32,-24,32,-75,32,32,32,32,32,32,-85,-23,-74,-84,]),'RETURN':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,196,198,223,228,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[33,33,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,33,33,33,33,33,-73,-76,33,-83,-35,33,33,33,33,33,-24,33,-75,33,33,33,33,33,33,-85,-23,-74,-84,]),'VAR':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,77,78,79,129,176,196,198,223,228,229,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[34,34,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,34,-81,-82,-34,-20,34,34,34,34,34,34,-73,-76,34,-83,-35,34,34,34,34,34,-24,34,-75,34,34,34,34,34,34,-85,-23,-74,-84,]),'CONST':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,77,78,79,129,176,196,198,223,228,229,234,248,249,252,253,256,258,268,269,271,272,273,277,278,279,280,281,282,284,285,286,287,288,289,],[35,35,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,35,-81,-82,-34,-20,35,35,35,35,35,35,-73,-76,35,-83,-35,35,35,35,35,35,-24,35,-75,35,35,35,35,35,35,-85,-23,-74,-84,]),'TYPEOF':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,24,33,36,41,44,45,46,47,48,49,53,54,55,57,60,61,74,75,76,77,78,79,93,94,109,110,111,112,113,114,115,117,118,129,130,131,141,147,165,167,168,176,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[36,36,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,36,36,36,36,-2,-3,-6,-7,-8,-19,36,36,36,36,36,36,36,36,36,36,-81,-82,36,36,36,36,36,-119,-120,36,36,36,36,-34,36,36,36,36,36,36,36,-20,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-73,-76,36,-83,-35,36,36,36,36,36,-24,36,36,-75,36,36,36,36,36,36,-85,-23,-74,-84,]),'FLOAT':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,24,33,36,41,44,45,46,47,48,49,53,54,55,57,60,61,74,75,76,77,78,79,90,93,94,109,110,111,112,113,114,115,117,118,129,130,131,141,147,165,167,168,176,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[37,37,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,37,37,37,37,-2,-3,-6,-7,-8,-19,37,37,37,37,37,37,37,37,37,37,-81,-82,133,37,37,37,37,37,-119,-120,37,37,37,37,-34,37,37,37,37,37,37,37,-20,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-73,-76,37,-83,-35,37,37,37,37,37,-24,37,37,-75,37,37,37,37,37,37,-85,-23,-74,-84,]),'STRING':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,24,33,36,41,44,45,46,47,48,49,53,54,55,57,60,61,74,75,76,77,78,79,93,94,109,110,111,112,113,114,115,117,118,129,130,131,141,147,165,167,168,176,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[38,38,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,38,38,38,38,-2,-3,-6,-7,-8,-19,38,38,38,38,38,38,38,38,38,38,-81,-82,38,38,38,38,38,-119,-120,38,38,38,38,-34,38,38,38,38,38,38,38,-20,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-73,-76,38,-83,-35,38,38,38,38,38,-24,38,38,-75,38,38,38,38,38,38,-85,-23,-74,-84,]),'NUMBER':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,24,33,36,41,44,45,46,47,48,49,53,54,55,57,60,61,74,75,76,77,78,79,90,93,94,109,110,111,112,113,114,115,117,118,129,130,131,141,147,165,167,168,176,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[39,39,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,39,39,39,39,-2,-3,-6,-7,-8,-19,39,39,39,39,39,39,39,39,39,39,-81,-82,132,39,39,39,39,39,-119,-120,39,39,39,39,-34,39,39,39,39,39,39,39,-20,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-73,-76,39,-83,-35,39,39,39,39,39,-24,39,39,-75,39,39,39,39,39,39,-85,-23,-74,-84,]),'LPAREN':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,20,24,25,26,27,28,33,36,40,41,44,45,46,47,48,49,53,54,55,57,60,61,69,70,72,74,75,76,77,78,79,81,93,94,106,107,109,110,111,112,113,114,115,117,118,125,127,129,130,131,141,147,152,153,154,156,157,158,159,165,167,168,176,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[24,24,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,54,24,74,75,76,77,24,24,90,24,-2,-3,-6,-7,-8,-19,24,24,24,24,24,24,117,118,54,24,24,24,24,-81,-82,128,24,24,146,147,24,24,24,-119,-120,24,24,24,24,54,168,-34,24,24,24,24,187,188,189,190,191,192,193,24,24,24,-20,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-73,-76,24,-83,-35,24,24,24,24,24,-24,24,24,-75,24,24,24,24,24,24,-85,-23,-74,-84,]),'MINUS':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,24,33,36,37,38,39,41,42,43,44,45,46,47,48,49,53,54,55,57,60,61,64,65,66,67,71,72,73,74,75,76,77,78,79,88,89,91,93,94,98,104,105,108,109,110,111,112,113,114,115,117,118,119,129,130,131,140,141,142,147,149,150,151,155,165,167,168,172,173,176,177,180,187,192,193,194,195,196,198,200,205,217,218,219,220,223,226,228,229,234,241,243,245,246,247,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[40,40,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,40,40,40,-108,-109,-110,40,-116,-117,-2,-3,-6,-7,-8,-19,40,40,40,40,40,40,113,-91,-93,-104,-105,-107,-118,40,40,40,40,-81,-82,-104,-106,-115,40,40,-33,-44,-45,-112,40,40,40,-119,-120,40,40,40,40,-111,-34,40,40,-32,40,-51,40,113,-90,-92,-97,40,40,40,-113,-114,-20,-50,40,40,40,40,-102,-103,40,40,40,40,-95,-96,-98,-99,40,40,40,40,40,40,40,-94,-100,-101,-73,-76,40,-83,-35,40,40,40,40,40,-24,40,40,-75,40,40,40,40,40,40,-85,-23,-74,-84,]),'LOGICALNEGATION':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,24,33,36,41,44,45,46,47,48,49,53,54,55,57,60,61,74,75,76,77,78,79,93,94,109,110,111,112,113,114,115,117,118,129,130,131,141,147,165,167,168,176,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[41,41,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,41,41,41,41,-2,-3,-6,-7,-8,-19,41,41,41,41,41,41,41,41,41,41,-81,-82,41,41,41,41,41,-119,-120,41,41,41,41,-34,41,41,41,41,41,41,41,-20,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-73,-76,41,-83,-35,41,41,41,41,41,-24,41,41,-75,41,41,41,41,41,41,-85,-23,-74,-84,]),'TRUE':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,24,33,36,41,44,45,46,47,48,49,53,54,55,57,60,61,74,75,76,77,78,79,93,94,109,110,111,112,113,114,115,117,118,129,130,131,141,147,165,167,168,176,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[42,42,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,42,42,42,42,-2,-3,-6,-7,-8,-19,42,42,42,42,42,42,42,42,42,42,-81,-82,42,42,42,42,42,-119,-120,42,42,42,42,-34,42,42,42,42,42,42,42,-20,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-73,-76,42,-83,-35,42,42,42,42,42,-24,42,42,-75,42,42,42,42,42,42,-85,-23,-74,-84,]),'FALSE':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,24,33,36,41,44,45,46,47,48,49,53,54,55,57,60,61,74,75,76,77,78,79,93,94,109,110,111,112,113,114,115,117,118,129,130,131,141,147,165,167,168,176,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,248,249,252,253,256,258,268,269,271,272,273,276,277,278,279,280,281,282,284,285,286,287,288,289,],[43,43,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,43,43,43,43,-2,-3,-6,-7,-8,-19,43,43,43,43,43,43,43,43,43,43,-81,-82,43,43,43,43,43,-119,-120,43,43,43,43,-34,43,43,43,43,43,43,43,-20,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-73,-76,43,-83,-35,43,43,43,43,43,-24,43,43,-75,43,43,43,43,43,43,-85,-23,-74,-84,]),'$end':([1,2,3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,248,249,253,256,273,278,286,287,288,289,],[0,-1,-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,-73,-76,-83,-35,-24,-75,-85,-23,-74,-84,]),'RBRACE':([3,4,8,9,10,11,12,13,14,15,16,17,37,38,39,42,43,44,45,46,47,48,49,64,65,66,67,71,72,73,78,79,83,84,85,86,87,88,89,91,98,104,105,108,119,129,135,138,140,142,148,149,150,151,155,172,173,176,177,185,194,195,211,215,217,218,219,220,223,224,225,228,236,238,245,246,247,248,249,250,253,256,258,260,261,269,273,278,279,281,282,284,285,286,287,288,289,],[-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-108,-109,-110,-116,-117,-2,-3,-6,-7,-8,-19,-89,-91,-93,-104,-105,-107,-118,-81,-82,-68,-69,-70,-71,-87,-104,-106,-115,-33,-44,-45,-112,-111,-34,176,178,-32,-51,-86,-88,-90,-92,-97,-113,-114,-20,-50,-47,-102,-103,-67,-46,-95,-96,-98,-99,248,249,-78,253,-72,-22,-94,-100,-101,-73,-76,-77,-83,-35,273,-21,-66,-80,-24,-75,-79,286,287,288,289,-85,-23,-74,-84,]),'CASE':([3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,197,224,225,248,249,250,253,256,269,273,278,279,286,287,288,289,],[-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,226,226,-78,-73,-76,-77,-83,-35,-80,-24,-75,-79,-85,-23,-74,-84,]),'DEFAULT':([3,4,8,9,10,11,12,13,14,15,16,17,44,45,46,47,48,49,78,79,129,176,197,224,225,248,249,250,253,256,269,273,278,279,286,287,288,289,],[-4,-5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-3,-6,-7,-8,-19,-81,-82,-34,-20,227,227,-78,-73,-76,-77,-83,-35,-80,-24,-75,-79,-85,-23,-74,-84,]),'SEMICOLON':([5,6,7,18,29,30,37,38,39,42,43,51,56,59,63,64,65,66,67,71,72,73,82,83,84,85,86,87,88,89,91,95,98,100,102,104,105,108,119,123,136,140,142,148,149,150,151,155,172,173,177,178,182,185,194,195,199,206,207,208,214,215,217,218,219,220,231,236,237,239,240,242,244,245,246,247,263,275,],[46,47,48,49,78,79,-108,-109,-110,-116,-117,-38,-64,-43,-87,-89,-91,-93,-104,-105,-107,-118,129,-68,-69,-70,-71,-87,-104,-106,-115,-62,-33,-63,-36,-44,-45,-112,-111,165,-42,-32,-51,-86,-88,-90,-92,-97,-113,-114,-50,-65,-37,-47,-102,-103,229,-28,238,-26,-49,-46,-95,-96,-98,-99,256,-72,-27,-25,260,-39,-48,-94,-100,-101,-53,-52,]),'DOT':([18,20,22,23,31,37,38,39,42,43,52,67,68,71,72,73,88,89,91,98,104,105,108,119,125,126,140,142,172,173,177,],[-118,-107,60,61,80,-108,-109,-110,-116,-117,-111,115,116,60,-107,-118,131,-106,-115,-33,-44,-45,-112,-111,-107,167,-32,-51,-113,-114,-50,]),'ASSIGN':([20,22,37,38,39,42,43,52,58,72,73,89,91,98,104,105,108,119,125,140,142,143,144,145,166,172,173,177,183,214,244,],[53,53,-108,-109,-110,-116,-117,93,53,-107,-118,-106,-115,-33,-44,-45,-112,-111,53,-32,-51,-41,53,-40,53,-113,-114,-50,212,-49,-48,]),'ASSIGNMENTOPERATOR':([20,22,37,38,39,42,43,58,72,73,89,91,98,104,105,108,119,125,140,142,143,144,145,166,172,173,177,],[55,55,-108,-109,-110,-116,-117,55,-107,-118,-106,-115,-33,-44,-45,-112,-111,55,-32,-51,-41,55,-40,55,-113,-114,-50,]),'ASSIGNMENTOPERATOR2':([20,22,37,38,39,42,43,58,72,73,89,91,98,104,105,108,119,125,140,142,143,144,145,166,172,173,177,],[56,56,-108,-109,-110,-116,-117,56,-107,-118,-106,-115,-33,-44,-45,-112,-111,56,-32,-51,-41,56,-40,56,-113,-114,-50,]),'LBRACKET':([20,52,72,119,125,142,143,144,145,177,183,206,208,212,214,237,239,243,244,276,],[57,94,57,94,57,-51,-41,184,-40,-50,213,184,184,243,-49,213,213,243,-48,243,]),'OBJECT':([24,33,53,54,55,57,74,75,76,93,94,109,110,111,112,113,114,130,141,147,165,168,180,205,226,241,243,276,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,-119,-120,68,68,68,68,68,68,68,68,68,68,68,68,]),'PARSEINT':([24,33,53,54,55,57,74,75,76,93,94,109,110,111,112,113,114,130,141,147,165,168,180,205,226,241,243,276,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,-119,-120,69,69,69,69,69,69,69,69,69,69,69,69,]),'PARSEFLOAT':([24,33,53,54,55,57,74,75,76,93,94,109,110,111,112,113,114,130,141,147,165,168,180,205,226,241,243,276,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,-119,-120,70,70,70,70,70,70,70,70,70,70,70,70,]),'ARITHMETICOPERATORHIGH':([37,38,39,42,43,65,66,67,71,72,73,88,89,91,98,104,105,108,119,140,142,150,151,155,172,173,177,194,195,217,218,219,220,245,246,247,],[-108,-109,-110,-116,-117,114,-93,-104,-105,-107,-118,-104,-106,-115,-33,-44,-45,-112,-111,-32,-51,114,-92,-97,-113,-114,-50,-102,-103,-95,-96,-98,-99,-94,-100,-101,]),'PLUS':([37,38,39,42,43,64,65,66,67,71,72,73,88,89,91,98,104,105,108,119,140,142,149,150,151,155,172,173,177,194,195,217,218,219,220,245,246,247,],[-108,-109,-110,-116,-117,112,-91,-93,-104,-105,-107,-118,-104,-106,-115,-33,-44,-45,-112,-111,-32,-51,112,-90,-92,-97,-113,-114,-50,-102,-103,-95,-96,-98,-99,-94,-100,-101,]),'RELATIONALOPERATOR':([37,38,39,42,43,63,64,65,66,67,71,72,73,87,88,89,91,98,104,105,108,119,140,142,148,149,150,151,155,171,172,173,177,194,195,217,218,219,220,236,245,246,247,],[-108,-109,-110,-116,-117,110,-89,-91,-93,-104,-105,-107,-118,110,-104,-106,-115,-33,-44,-45,-112,-111,-32,-51,110,-88,-90,-92,-97,110,-113,-114,-50,-102,-103,-95,-96,-98,-99,110,-94,-100,-101,]),'RPAREN':([37,38,39,42,43,51,54,56,59,62,63,64,65,66,67,71,72,73,83,84,85,86,87,88,89,91,95,97,98,99,100,102,104,105,108,119,120,121,122,128,132,133,136,140,142,146,148,149,150,151,155,160,161,170,172,173,177,178,181,182,185,186,188,189,190,191,194,195,201,206,208,214,215,216,217,218,219,220,221,222,230,232,236,237,239,242,244,245,246,247,254,263,274,275,],[-108,-109,-110,-116,-117,-38,98,-64,-43,108,-87,-89,-91,-93,-104,-105,-107,-118,-68,-69,-70,-71,-87,-104,-106,-115,-62,140,-33,-59,-63,-36,-44,-45,-112,-111,162,163,164,-31,172,173,-42,-32,-51,185,-86,-88,-90,-92,-97,194,195,203,-113,-114,-50,-65,-58,-37,-47,215,217,218,219,220,-102,-103,231,-28,-26,-49,-46,245,-95,-96,-98,-99,246,247,255,-30,-72,-27,-25,-39,-48,-94,-100,-101,270,-53,-29,-52,]),'LOGICALOPERATOR':([37,38,39,42,43,62,63,64,65,66,67,71,72,73,84,87,88,89,91,98,104,105,108,119,120,121,122,140,142,148,149,150,151,155,172,173,177,194,195,199,217,218,219,220,245,246,247,251,],[-108,-109,-110,-116,-117,109,-87,-89,-91,-93,-104,-105,-107,-118,109,-87,-104,-106,-115,-33,-44,-45,-112,-111,109,109,109,-32,-51,-86,-88,-90,-92,-97,-113,-114,-50,-102,-103,109,-95,-96,-98,-99,-94,-100,-101,109,]),'QUESTIONMARK':([37,38,39,42,43,64,65,66,67,71,72,73,87,88,89,91,98,104,105,108,119,140,142,149,150,151,155,172,173,177,194,195,217,218,219,220,245,246,247,],[-108,-109,-110,-116,-117,-89,-91,-93,-104,-105,-107,-118,130,-104,-106,-115,-33,-44,-45,-112,-111,-32,-51,-88,-90,-92,-97,-113,-114,-50,-102,-103,-95,-96,-98,-99,-94,-100,-101,]),'COMMA':([37,38,39,42,43,64,65,66,67,71,72,73,83,84,85,86,87,88,89,91,97,98,99,104,105,108,119,128,138,140,142,148,149,150,151,155,170,172,173,177,181,185,194,195,201,206,208,211,214,215,217,218,219,220,232,236,237,239,244,245,246,247,261,262,263,264,265,266,274,275,283,],[-108,-109,-110,-116,-117,-89,-91,-93,-104,-105,-107,-118,-68,-69,-70,-71,-87,-104,-106,-115,141,-33,-59,-44,-45,-112,-111,-31,179,-32,-51,-86,-88,-90,-92,-97,204,-113,-114,-50,-58,-47,-102,-103,141,-28,-26,-67,-49,-46,-95,-96,-98,-99,-30,-72,-27,-25,-48,-94,-100,-101,-66,276,-53,-55,-56,-57,-29,-52,-54,]),'RBRACKET':([37,38,39,42,43,64,65,66,67,71,72,73,83,84,85,86,87,88,89,91,98,101,104,105,108,119,137,140,142,148,149,150,151,155,172,173,177,184,185,194,195,213,215,217,218,219,220,236,243,245,246,247,262,263,264,265,266,275,283,],[-108,-109,-110,-116,-117,-89,-91,-93,-104,-105,-107,-118,-68,-69,-70,-71,-87,-104,-106,-115,-33,142,-44,-45,-112,-111,177,-32,-51,-86,-88,-90,-92,-97,-113,-114,-50,214,-47,-102,-103,244,-46,-95,-96,-98,-99,-72,263,-94,-100,-101,275,-53,-55,-56,-57,-52,-54,]),'COLON':([37,38,39,42,43,58,63,64,65,66,67,71,72,73,89,91,98,104,105,108,119,134,139,140,142,148,149,150,151,155,166,169,171,172,173,175,177,194,195,203,210,217,218,219,220,227,235,245,246,247,251,],[-108,-109,-110,-116,-117,103,-87,-89,-91,-93,-104,-105,-107,-118,-106,-115,-33,-44,-45,-112,-111,174,180,-32,-51,-86,-88,-90,-92,-97,103,202,205,-113,-114,209,-50,-102,-103,233,241,-95,-96,-98,-99,252,259,-94,-100,-101,268,]),'LBRACE':([50,53,162,163,164,203,206,208,214,237,239,244,255,257,267,270,],[92,96,196,197,198,234,-28,-26,-49,-27,-25,-48,271,272,277,280,]),'POP':([61,131,],[106,106,]),'PUSH':([61,131,],[107,107,]),'LOG':([80,],[127,]),'TYPE':([103,174,202,209,233,259,],[145,208,208,208,208,208,]),'INDEXOF':([115,131,],[152,152,]),'TOSTRING':([115,131,],[153,153,]),'JOIN':([115,131,],[154,154,]),'LENGTH':([115,131,],[155,155,]),'TOLOWERCASE':([115,131,],[156,156,]),'TOUPPERCASE':([115,131,],[157,157,]),'KEYS':([116,],[158,]),'VALUES':([116,],[159,]),'OF':([166,],[200,]),'ELSE':([248,],[267,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrs':([0,196,198,234,252,268,271,272,277,280,],[2,223,228,258,269,279,281,282,284,285,]),'instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[3,44,3,3,44,44,3,3,44,3,44,3,3,3,44,3,44,44,44,44,]),'interface_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[4,45,4,4,45,45,4,4,45,4,45,4,4,4,45,4,45,45,45,45,]),'statement':([0,2,77,196,198,223,228,229,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[5,5,123,5,5,5,5,254,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'statement_pop':([0,2,33,53,54,55,57,93,94,141,147,168,180,196,198,223,228,234,241,243,252,258,268,269,271,272,276,277,279,280,281,282,284,285,],[6,6,85,85,85,85,85,85,85,85,85,85,85,6,6,6,6,6,85,85,6,6,6,6,6,6,85,6,6,6,6,6,6,6,]),'statement_push':([0,2,33,53,54,55,57,93,94,141,147,168,180,196,198,223,228,234,241,243,252,258,268,269,271,272,276,277,279,280,281,282,284,285,],[7,7,86,86,86,86,86,86,86,86,86,86,86,7,7,7,7,7,86,86,7,7,7,7,7,7,86,7,7,7,7,7,7,7,]),'if_instr':([0,2,196,198,223,228,234,252,258,267,268,269,271,272,277,279,280,281,282,284,285,],[8,8,8,8,8,8,8,8,8,278,8,8,8,8,8,8,8,8,8,8,8,]),'switch_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'while_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'for_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'for_each_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'break_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'continue_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'console_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'function_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'return_instr':([0,2,196,198,223,228,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'function_call_instr':([0,2,24,33,36,41,53,54,55,57,60,61,74,75,76,77,93,94,109,110,111,114,115,117,118,130,131,141,147,165,167,168,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,252,258,268,269,271,272,276,277,279,280,281,282,284,285,],[18,18,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,18,18,73,73,18,73,18,73,18,73,73,18,18,18,18,18,18,73,18,18,18,18,18,18,18,]),'var_type':([0,2,77,196,198,223,228,229,234,252,258,268,269,271,272,277,279,280,281,282,284,285,],[21,21,124,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'interface_dimensions_access':([0,2,24,33,53,54,55,57,74,75,76,77,93,94,109,110,111,114,130,141,147,165,168,180,196,198,205,223,226,228,229,234,241,243,252,258,268,269,271,272,276,277,279,280,281,282,284,285,],[22,22,71,71,71,71,71,71,71,71,71,22,71,71,71,71,71,71,71,71,71,71,71,71,22,22,71,22,71,22,22,22,71,71,22,22,22,22,22,22,71,22,22,22,22,22,22,22,]),'factor':([0,2,24,33,36,41,53,54,55,57,60,61,74,75,76,77,93,94,109,110,111,114,115,117,118,130,131,141,147,165,167,168,180,187,192,193,196,198,200,205,223,226,228,229,234,241,243,252,258,268,269,271,272,276,277,279,280,281,282,284,285,],[23,23,67,88,89,91,88,88,88,88,104,105,67,67,67,126,88,88,67,67,67,67,105,160,161,67,105,88,88,67,105,88,88,216,221,222,23,23,230,67,23,67,23,126,23,88,88,23,23,23,23,23,23,88,23,23,23,23,23,23,23,]),'statement_assign':([20,22,58,125,144,166,],[51,59,102,51,182,102,]),'matriz_dimensions_access':([20,72,125,],[52,119,52,]),'logical':([24,33,53,54,55,57,74,75,76,93,94,141,147,165,168,180,226,241,243,276,],[62,84,84,84,84,84,120,121,122,84,84,84,84,199,84,84,251,84,84,84,]),'relation':([24,33,53,54,55,57,74,75,76,93,94,109,130,141,147,165,168,180,205,226,241,243,276,],[63,87,87,87,87,87,63,63,63,87,87,148,171,87,87,63,87,87,236,63,87,87,87,]),'arithmetic':([24,33,53,54,55,57,74,75,76,93,94,109,110,130,141,147,165,168,180,205,226,241,243,276,],[64,64,64,64,64,64,64,64,64,64,64,64,149,64,64,64,64,64,64,64,64,64,64,64,]),'term':([24,33,53,54,55,57,74,75,76,93,94,109,110,111,130,141,147,165,168,180,205,226,241,243,276,],[65,65,65,65,65,65,65,65,65,65,65,65,65,150,65,65,65,65,65,65,65,65,65,65,65,]),'factor_function':([24,33,53,54,55,57,74,75,76,93,94,109,110,111,114,130,141,147,165,168,180,205,226,241,243,276,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,151,66,66,66,66,66,66,66,66,66,66,66,]),'statement_assign_value':([33,53,54,55,57,93,94,141,147,168,180,241,243,276,],[82,95,99,100,101,136,137,181,186,99,211,261,265,265,]),'ternary_operator':([33,53,54,55,57,93,94,141,147,168,180,241,243,276,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'values':([54,168,],[97,201,]),'arithmetic_operador_low':([64,149,],[111,111,]),'interface_params':([92,],[135,]),'statement_assign_interface':([96,],[138,]),'statement_type':([103,],[144,]),'function_params':([128,],[170,]),'matriz_dimensions':([144,206,208,],[183,237,239,]),'function_type':([174,202,209,233,259,],[207,232,240,257,274,]),'cases':([197,],[224,]),'case':([197,224,],[225,250,]),'matriz_dimensions_values':([212,243,276,],[242,266,266,]),'elements':([243,],[262,]),'element':([243,276,],[264,283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrs','init',1,'p_init','sintax.py',4),
  ('instrs -> instrs instr','instrs',2,'p_instrs_list','sintax.py',8),
  ('instrs -> instrs interface_instr','instrs',2,'p_instrs_interfaces','sintax.py',13),
  ('instrs -> instr','instrs',1,'p_instrs_instr','sintax.py',18),
  ('instrs -> interface_instr','instrs',1,'p_instrs_interface','sintax.py',22),
  ('instr -> statement SEMICOLON','instr',2,'p_instr','sintax.py',26),
  ('instr -> statement_pop SEMICOLON','instr',2,'p_instr','sintax.py',27),
  ('instr -> statement_push SEMICOLON','instr',2,'p_instr','sintax.py',28),
  ('instr -> if_instr','instr',1,'p_instr','sintax.py',29),
  ('instr -> switch_instr','instr',1,'p_instr','sintax.py',30),
  ('instr -> while_instr','instr',1,'p_instr','sintax.py',31),
  ('instr -> for_instr','instr',1,'p_instr','sintax.py',32),
  ('instr -> for_each_instr','instr',1,'p_instr','sintax.py',33),
  ('instr -> break_instr','instr',1,'p_instr','sintax.py',34),
  ('instr -> continue_instr','instr',1,'p_instr','sintax.py',35),
  ('instr -> console_instr','instr',1,'p_instr','sintax.py',36),
  ('instr -> function_instr','instr',1,'p_instr','sintax.py',37),
  ('instr -> return_instr','instr',1,'p_instr','sintax.py',38),
  ('instr -> function_call_instr SEMICOLON','instr',2,'p_instr','sintax.py',39),
  ('interface_instr -> INTERFACE ID LBRACE interface_params RBRACE','interface_instr',5,'p_interface','sintax.py',45),
  ('interface_params -> interface_params ID COLON function_type SEMICOLON','interface_params',5,'p_interface_params','sintax.py',50),
  ('interface_params -> ID COLON function_type SEMICOLON','interface_params',4,'p_interface_params_param','sintax.py',55),
  ('function_instr -> FUNCTION ID LPAREN function_params RPAREN COLON function_type LBRACE instrs RBRACE','function_instr',10,'p_function','sintax.py',60),
  ('function_instr -> FUNCTION ID LPAREN function_params RPAREN LBRACE instrs RBRACE','function_instr',8,'p_function_void','sintax.py',64),
  ('function_type -> TYPE matriz_dimensions','function_type',2,'p_function_type','sintax.py',68),
  ('function_type -> TYPE','function_type',1,'p_function_type','sintax.py',69),
  ('function_type -> ID matriz_dimensions','function_type',2,'p_function_type','sintax.py',70),
  ('function_type -> ID','function_type',1,'p_function_type','sintax.py',71),
  ('function_params -> function_params COMMA ID COLON function_type','function_params',5,'p_function_params','sintax.py',79),
  ('function_params -> ID COLON function_type','function_params',3,'p_function_params_param','sintax.py',84),
  ('function_params -> <empty>','function_params',0,'p_function_params_null','sintax.py',88),
  ('function_call_instr -> ID LPAREN values RPAREN','function_call_instr',4,'p_functino_call','sintax.py',93),
  ('function_call_instr -> ID LPAREN RPAREN','function_call_instr',3,'p_functino_call_empty','sintax.py',97),
  ('return_instr -> RETURN statement_assign_value SEMICOLON','return_instr',3,'p_return_instr','sintax.py',101),
  ('console_instr -> CONSOLE DOT LOG LPAREN values RPAREN SEMICOLON','console_instr',7,'p_console','sintax.py',105),
  ('statement -> var_type ID statement_assign','statement',3,'p_statement_implicit','sintax.py',109),
  ('statement -> var_type ID COLON statement_type statement_assign','statement',5,'p_statement_explicit','sintax.py',113),
  ('statement -> ID statement_assign','statement',2,'p_statement_simple','sintax.py',117),
  ('statement -> var_type ID COLON statement_type matriz_dimensions ASSIGN matriz_dimensions_values','statement',7,'p_statement_matriz','sintax.py',121),
  ('statement_type -> TYPE','statement_type',1,'p_statment_type','sintax.py',125),
  ('statement_type -> ID','statement_type',1,'p_statment_type','sintax.py',126),
  ('statement -> ID matriz_dimensions_access ASSIGN statement_assign_value','statement',4,'p_statement_matriz2','sintax.py',131),
  ('statement -> interface_dimensions_access statement_assign','statement',2,'p_statement_assign_interface0','sintax.py',135),
  ('interface_dimensions_access -> interface_dimensions_access DOT factor','interface_dimensions_access',3,'p_interface_dimenssions_access','sintax.py',140),
  ('interface_dimensions_access -> factor DOT factor','interface_dimensions_access',3,'p_interface_dimenssions_access2','sintax.py',145),
  ('statement_push -> factor DOT PUSH LPAREN statement_assign_value RPAREN','statement_push',6,'p_statament_array_push','sintax.py',150),
  ('statement_pop -> factor DOT POP LPAREN RPAREN','statement_pop',5,'p_statement_array_pop','sintax.py',155),
  ('matriz_dimensions -> matriz_dimensions LBRACKET RBRACKET','matriz_dimensions',3,'p_statement_matriz_assign_dimensions','sintax.py',159),
  ('matriz_dimensions -> LBRACKET RBRACKET','matriz_dimensions',2,'p_statement_matriz_assign_dimension','sintax.py',164),
  ('matriz_dimensions_access -> matriz_dimensions_access LBRACKET statement_assign_value RBRACKET','matriz_dimensions_access',4,'p_statement_matriz_assign_value','sintax.py',168),
  ('matriz_dimensions_access -> LBRACKET statement_assign_value RBRACKET','matriz_dimensions_access',3,'p_statement_matriz_assign_value2','sintax.py',172),
  ('matriz_dimensions_values -> LBRACKET elements RBRACKET','matriz_dimensions_values',3,'p_statement_matriz_assign_value_single','sintax.py',176),
  ('matriz_dimensions_values -> LBRACKET RBRACKET','matriz_dimensions_values',2,'p_statement_matriz_assign_value_list','sintax.py',181),
  ('elements -> elements COMMA element','elements',3,'p_elements','sintax.py',185),
  ('elements -> element','elements',1,'p_element2','sintax.py',191),
  ('element -> statement_assign_value','element',1,'p_element3','sintax.py',195),
  ('element -> matriz_dimensions_values','element',1,'p_element4','sintax.py',199),
  ('values -> values COMMA statement_assign_value','values',3,'p_values_list','sintax.py',203),
  ('values -> statement_assign_value','values',1,'p_values_value','sintax.py',208),
  ('var_type -> VAR','var_type',1,'p_var_type','sintax.py',212),
  ('var_type -> CONST','var_type',1,'p_var_type','sintax.py',213),
  ('statement_assign -> ASSIGN statement_assign_value','statement_assign',2,'p_statement_assign','sintax.py',217),
  ('statement_assign -> ASSIGNMENTOPERATOR statement_assign_value','statement_assign',2,'p_statement_assign','sintax.py',218),
  ('statement_assign -> ASSIGNMENTOPERATOR2','statement_assign',1,'p_statement_assign','sintax.py',219),
  ('statement_assign -> ASSIGN LBRACE statement_assign_interface RBRACE','statement_assign',4,'p_statement_assign','sintax.py',220),
  ('statement_assign_interface -> statement_assign_interface COMMA ID COLON statement_assign_value','statement_assign_interface',5,'p_statement_assign_interface','sintax.py',235),
  ('statement_assign_interface -> ID COLON statement_assign_value','statement_assign_interface',3,'p_statement_assign_interface2','sintax.py',240),
  ('statement_assign_value -> ternary_operator','statement_assign_value',1,'p_statement_assign_value','sintax.py',244),
  ('statement_assign_value -> logical','statement_assign_value',1,'p_statement_assign_value','sintax.py',245),
  ('statement_assign_value -> statement_pop','statement_assign_value',1,'p_statement_assign_value','sintax.py',246),
  ('statement_assign_value -> statement_push','statement_assign_value',1,'p_statement_assign_value','sintax.py',247),
  ('ternary_operator -> relation QUESTIONMARK relation COLON relation','ternary_operator',5,'p_ternary_operator','sintax.py',251),
  ('if_instr -> IF LPAREN logical RPAREN LBRACE instrs RBRACE','if_instr',7,'p_if_instr','sintax.py',255),
  ('if_instr -> IF LPAREN logical RPAREN LBRACE instrs RBRACE ELSE LBRACE instrs RBRACE','if_instr',11,'p_if_else_instr','sintax.py',259),
  ('if_instr -> IF LPAREN logical RPAREN LBRACE instrs RBRACE ELSE if_instr','if_instr',9,'p_if_else_if_instr','sintax.py',263),
  ('switch_instr -> SWITCH LPAREN logical RPAREN LBRACE cases RBRACE','switch_instr',7,'p_switch_instr','sintax.py',267),
  ('cases -> cases case','cases',2,'p_cases_list','sintax.py',271),
  ('cases -> case','cases',1,'p_cases_case','sintax.py',276),
  ('case -> CASE logical COLON instrs','case',4,'p_case','sintax.py',280),
  ('case -> DEFAULT COLON instrs','case',3,'p_default','sintax.py',284),
  ('break_instr -> BREAK SEMICOLON','break_instr',2,'p_break','sintax.py',288),
  ('continue_instr -> CONTINUE SEMICOLON','continue_instr',2,'p_continue','sintax.py',292),
  ('while_instr -> WHILE LPAREN logical RPAREN LBRACE instrs RBRACE','while_instr',7,'p_while_instr','sintax.py',296),
  ('for_instr -> FOR LPAREN statement SEMICOLON logical SEMICOLON statement RPAREN LBRACE instrs RBRACE','for_instr',11,'p_for_instr','sintax.py',300),
  ('for_each_instr -> FOR LPAREN var_type ID OF factor RPAREN LBRACE instrs RBRACE','for_each_instr',10,'p_for_each_instr','sintax.py',304),
  ('logical -> logical LOGICALOPERATOR relation','logical',3,'p_logical','sintax.py',308),
  ('logical -> relation','logical',1,'p_logical_relation','sintax.py',312),
  ('relation -> relation RELATIONALOPERATOR arithmetic','relation',3,'p_relation','sintax.py',316),
  ('relation -> arithmetic','relation',1,'p_relation_arithmetic','sintax.py',320),
  ('arithmetic -> arithmetic arithmetic_operador_low term','arithmetic',3,'p_arithmetic','sintax.py',324),
  ('arithmetic -> term','arithmetic',1,'p_adic_term','sintax.py',328),
  ('term -> term ARITHMETICOPERATORHIGH factor_function','term',3,'p_term','sintax.py',332),
  ('term -> factor_function','term',1,'p_term_factor','sintax.py',336),
  ('factor_function -> factor DOT INDEXOF LPAREN factor RPAREN','factor_function',6,'p_factor_functions','sintax.py',340),
  ('factor_function -> factor DOT TOSTRING LPAREN RPAREN','factor_function',5,'p_factor_functions','sintax.py',341),
  ('factor_function -> factor DOT JOIN LPAREN RPAREN','factor_function',5,'p_factor_functions','sintax.py',342),
  ('factor_function -> factor DOT LENGTH','factor_function',3,'p_factor_functions','sintax.py',343),
  ('factor_function -> factor DOT TOLOWERCASE LPAREN RPAREN','factor_function',5,'p_factor_functions','sintax.py',344),
  ('factor_function -> factor DOT TOUPPERCASE LPAREN RPAREN','factor_function',5,'p_factor_functions','sintax.py',345),
  ('factor_function -> OBJECT DOT KEYS LPAREN factor RPAREN','factor_function',6,'p_factor_functions','sintax.py',346),
  ('factor_function -> OBJECT DOT VALUES LPAREN factor RPAREN','factor_function',6,'p_factor_functions','sintax.py',347),
  ('factor_function -> PARSEINT LPAREN factor RPAREN','factor_function',4,'p_factor_functions_natives','sintax.py',364),
  ('factor_function -> PARSEFLOAT LPAREN factor RPAREN','factor_function',4,'p_factor_functions_natives','sintax.py',365),
  ('factor_function -> factor','factor_function',1,'p_factor_functions_factor','sintax.py',370),
  ('factor_function -> interface_dimensions_access','factor_function',1,'p_factor_interface','sintax.py',374),
  ('factor -> TYPEOF factor','factor',2,'p_factor_typeof','sintax.py',378),
  ('factor -> ID','factor',1,'p_factor','sintax.py',382),
  ('factor -> FLOAT','factor',1,'p_factor_double','sintax.py',386),
  ('factor -> STRING','factor',1,'p_factor_text','sintax.py',390),
  ('factor -> NUMBER','factor',1,'p_factor_number','sintax.py',394),
  ('factor -> ID matriz_dimensions_access','factor',2,'p_factor_matrix','sintax.py',398),
  ('factor -> LPAREN logical RPAREN','factor',3,'p_factor_logical','sintax.py',402),
  ('factor -> MINUS LPAREN NUMBER RPAREN','factor',4,'p_factor_negation_number','sintax.py',406),
  ('factor -> MINUS LPAREN FLOAT RPAREN','factor',4,'p_factor_negation_double','sintax.py',410),
  ('factor -> LOGICALNEGATION factor','factor',2,'p_factor_negation','sintax.py',414),
  ('factor -> TRUE','factor',1,'p_factor_boolean','sintax.py',418),
  ('factor -> FALSE','factor',1,'p_factor_boolean','sintax.py',419),
  ('factor -> function_call_instr','factor',1,'p_factor_call_function','sintax.py',423),
  ('arithmetic_operador_low -> PLUS','arithmetic_operador_low',1,'p_arithmetic_operator_low','sintax.py',427),
  ('arithmetic_operador_low -> MINUS','arithmetic_operador_low',1,'p_arithmetic_operator_low','sintax.py',428),
]
